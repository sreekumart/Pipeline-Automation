pipeline {
    agent any

stages{
        stage('DTFILEPP'){
            steps {
				sh "ssh -i /c/Users/Stuliche/.jenkins/privatekey/secret.key akumar39@lena088.jcpenney.com './jenkins/jobs/step1.sh'"
				sh "ssh -i /c/Users/Stuliche/.jenkins/privatekey/secret.key akumar39@lena088.jcpenney.com exit"
            }
        }
		
		stage('DTLEPSKU'){
            steps {
                sh "ssh -i /c/Users/Stuliche/.jenkins/privatekey/secret.key akumar39@lena088.jcpenney.com './jenkins/jobs/step1.sh'"
				sh "ssh -i /c/Users/Stuliche/.jenkins/privatekey/secret.key akumar39@lena088.jcpenney.com exit"
            }
        }

        stage ('POST-DTLEPSKU'){
            parallel{
                stage ('DTLIBP01'){
                    steps {
                        sh "/c/Users/Stuliche/Desktop/JenkinsFile/Pipeline-Automation/scripts/hello.sh"
                    }
                }

				stage ('DTLEP3SF'){
                    steps {
						script {
							b = build (job: 'DTLEPS3F', wait: false,propagate: false).result
							if(b == 'FAILURE') {
								echo "First job failed"
								currentBuild.result = 'UNSTABLE' // of FAILURE
							}
                        }
                    }
                }
				
                stage ('DTLEPCOL'){
                    steps {
						sh "echo this job will fail"
                        sh "exit 1"
                    }
                }
            }
        }
		
		
		/***stage ('POST-DTLEPSKU'){
            parallel{
				stage ('DTLEPCOL'){
                    steps {
                        sh "echo DTLEPCOL"
                    }
                }
            }
        }
		
		stage('DTLEPREC'){
			steps {
                        sh "echo DTLEPREC"
            }
		
		}

		stage('POST-DTLEPREC'){
		
			parallel{
				stage('DTLEPSEO'){
					steps {
						sh "echo DTLEPSEO"
					}
					post {
						success {
							build (job: 'DTPPENDBRANCH-2', wait: true)
						}
					}

				}
				
				stage('EXT-DTLEPLOT'){
					steps{
						build (job: 'DTPPENDBRANCH-1', wait: true)
					}
				}
			}
		
		
		}***/
    }
}